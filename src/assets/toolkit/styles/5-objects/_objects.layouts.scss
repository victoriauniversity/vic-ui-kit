/*=========================================
=      LAYOUTS, CONTAINERS & BLOCKS       =
=========================================*/


/*******************************************************************************

  Contains basic building containers, layouts, columns and grids.

  It's *HIGHLY RECOMMENDED* to understand how to build structures with these
  before development of new objects and components.

*******************************************************************************/




// Sticky footer
html { height: 100%; }

body {
  display: flex;
  min-height: 100%;
  flex-direction: column;

  > footer { overflow: hidden; } // IE11+ extra margin after flex-box fix
}




/* ===== BASIC BUILDING BLOCKS ============================================ */


/** BLOCK - Universal building block with standard paddings. */

.block { padding: $block-padding; }


/** CENTRALISER - Restricts the width of the content to allowed maximum and aligns to center. */

.centraliser {
  @include clearfix;
  position: relative;
  margin-right: auto;
  margin-left: auto;
  width: 100%;
  max-width: $base-width;
}


/** SECTOR - Single page section container with unlimited width and no paddings/margins. Can be used to group related components. */

.sector,
.separated {
  @include clearfix;
}

.separated,
.sector {
  border-bottom: $base-border;
}


//TODO: Use either 'section' or 'sector'
.section {
  display: block;
  border-bottom: $base-border;
}


/** LAYOUT - Contains all the content's columns and layout combinations */

.layout {
  width: 100%;

  &.block {
    padding-top: 0;
    padding-bottom: 0;
  }

  // Sticky footer - stretch content to maximum
  body > & {
    display: block;
    flex: 1 1 auto; // = 1 (1 1 auto is *required* for IE-based browsers!)
  }
}

/* IE10+ fix for tablet and smaller where layout has white space below */
@media screen and ( max-width: 58em ) and ( -ms-high-contrast: none ), ( -ms-high-contrast: active ) {
  .layout { height: 100%; }
}





/* ===== 3-COLUMN LAYOUT ================================================== */


.content-panel {
  position: relative;

  > img { width: 100%; }

  > main,
  > aside {
    vertical-align: top;

    > .block {
      padding-top:    1.5 * $column-padding;
      padding-bottom: 1.5 * $column-padding;
    }
  }
}

.sidebar {
  z-index:  $z-index-top;
  position: relative;
}


@include breakpoint( $tablet-and-smaller ) {
  .layout {
    &.block {
      padding-right: 0;
      padding-left:  0;
    }
  }
}


@include breakpoint( $tablet-and-bigger ) {

  .content-panel {
    @include grid-visual;
    /** 1st Content bar + 2nd widgets bar */
    $widgetbar-to-content-width-ratio: .25; // 25% of the content container's width
    $widgetbar-columns: $widgetbar-to-content-width-ratio * $grid-columns;
    $content-columns:   $grid-columns - $widgetbar-columns;

    /** Main content *ONLY* */
    > main:last-child {
      width: 100%;
    }

    /** Main content + widgetbar */
    > main:not(:last-child) {
      @include grid-column( $content-columns );
    }

    // Sub-columns
    > aside {
      @include grid-column( $widgetbar-columns );
    }
  }
}


@include breakpoint( $desktop-and-bigger ) {
  /** Left sidebar */
  $sidebar-to-document-width-ratio: .2; // 20% of the page's width
  $sidebar-columns:                 $sidebar-to-document-width-ratio * $grid-columns;

  .layout {
    overflow: hidden;
    //display:  table; // Fixes the issue with misbehavior of inner containers
  }

  .sidebar {
    @include grid-column( $sidebar-columns );
  }

  // Can contain Content only column and Widget bar (optional).
  .content-panel {

    /** Content panel *ONLY* */

    &:first-child {
      width: 100%;

      // Main content *ONLY*
      > main:last-child {
        > .block { padding-left: 0; }
      }
    }

    > main:last-child {
      > .block { padding-right: 0; }
    }

    /** 1st Sidebar + 2nd Content panel */

    &:not(:first-child) {
      @include grid-column( $grid-columns - $sidebar-columns );
    }

    > aside {
      > .block { padding-right: 0; }
    }
  }
}
