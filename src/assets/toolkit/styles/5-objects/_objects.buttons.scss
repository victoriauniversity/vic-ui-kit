/*============================================================================*\
| ATOMIC BUTTONS
\*============================================================================*/

////
/// Atomic button components that can be re-used anywhere.
///
/// @group buttons





button,
.button {
  display:       inline-block;
  padding:       _em( $gap-small ) _em( $gap-half );
  font-family:   $button-text-family;
  font-weight:   $button-text-weight;
  line-height:   $text-line-height;
  border-radius: $button-corner-radius;

  // Default button
  color:            $text-color;
  background-color: $button-color;

  // Disable the negative effects of a standard link
  .formatting & {
    color: inherit;
    text-decoration: none;

    @include hoverify() { color: inherit; }
  }

  @include hoverify() {
    color: $text-color;
    background: $button-hover-color;
  }

  // Flat (looking like a link)
  &.flat {
    @include linkify-text;
    background-color: transparent;
  }

  // Primary/Call-to-action button
  &.primary {
    background-color: $button-primary-color;
    color:            $white;

    @include hoverify() {
      color: $white;
      background: $button-primary-hover-color;
    }
  }

  // Secondary button: transparent with border outline
  &.flat-border {
    background: transparent;
    border:     $button-border-width solid $button-primary-color;
    color:      $button-primary-color;

    @include hoverify() {
      color: $white;
      background: $button-primary-color;
    }
  }

  // Critical/Destructive operations button
  &.danger {
    background-color: $button-danger-color;
    color: $white;

    @include hoverify() {
      background: $button-danger-hover-color;
      color: $white;
    }
  }

  // Disabled/Cannot be used button
  &[disabled],
  &.disabled {
    background: $button-color;
    color:      $button-disabled-text-color;
    cursor:     default;

    @include hoverify() {
      color:      $button-disabled-text-color;
    }
  }

  // Button sizing
  &.large { font-size: $text-size-huge; }
  &.extra-large { font-size: $text-size-massive; }

  // -> Arrow icon for all buttons that are not `.flat` nor `.no-icon`
  &:not(.flat):not(.no-icon) {
    @include icon-arrow-right;

    &::after { display: inline; }
  }


}

// Resets for special button variations
input.button {
  border: 0;
  cursor: pointer;
}





/*= SPECIALISED BUTTONS ======================================================*/


/** Fixed rounded buttons floating on the edges of the screen */

$btn-floating-size: 3.8rem;


.btn-floating {
  @include size( $btn-floating-size );
  z-index:          $z-index-top;
  position:         fixed;
  right:            0;
  display:          block;
  margin:           $gap-larger 2%;
  padding:          $gap-half;

  text-align:       center;
  color:            $grey;
  box-shadow:       $shadow;
  background-color: $grey-gallery;
  border-radius:    $btn-floating-size;
  font-size:        $text-size-smaller;

  @include hoverify() {
    background-color: $grey-alto;
    color: $link-hover-color;
  }

  @include icon-selector {
    font-size: $text-size-massive;

    &::before { margin-right: 0; }
  }

  // Placement location
  &.top { top: 0; }
  &.bottom { bottom: 0; }

  // Only shows up when the main heading strip is sticking to the top (e.g. 'go to top' button)
  &.sticky {
    transition: all .3s ease-in;
    opacity: 0;
  }

  .global.no-top ~ &.sticky { opacity: 1; }
}





/*= BUTTON CONTAINERS ========================================================*/


//TODO: Rename to something more generic - e.g. `button-panel right`
.button-right { text-align: right; }


.button-list {
  .button { margin: $gap-small $gap-tiny; }
  .disabled { background: transparent; }

  //TODO: @deprecated - Use .disabled instead and remove if possible
  span {
    &.button {
      background-color: inherit;

      @include hoverify() {
        background-color: inherit;
        cursor:           not-allowed;
      }
    }
  }
}




